# Default values for helm-botiga-backend.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

nameOverride: ""
fullnameOverride: ""

imagePullSecrets:
  - name: docker-registry-secret

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

deployment:
  service:
    type: NodePort
    port: 80
    nodePort: 30000
  probe:
    liveness:
      path: /api/live
      initialDelaySeconds: 10
      periodSeconds: 10
    readiness:
      path: /api/live
      initialDelaySeconds: 10
      periodSeconds: 10
  image:
    repository: varunbotiga/botiga-server
    pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
    tag: "1.0.0"
  
  imagePullSecrets:
    - name: docker-registry-secret
  
  env:
    - name: NODE_ENV
      value: "development"
    - name: PORT
      value: "80"
    - name: DD_LOGS_ENABLED
      value: "false"
    - name: EMAIL_NOTIFICATONS_ENABLED
      value: "false"
    - name: DD_API_KEY
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: DD_API_KEY
    - name: JWT_SECRET
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: JWT_SECRET
    - name: ENCRYPTION_SECRET
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: ENCRYPTION_SECRET
    - name: DB_CONNECTION_STRING
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: DB_CONNECTION_STRING
    - name: AWS_ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: AWS_ACCESS_KEY
    - name: AWS_ACCESS_SECRET
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: AWS_ACCESS_SECRET
    - name: AWS_REGION
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: AWS_REGION
    - name: AWS_BUCKET_NAME
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: AWS_BUCKET_NAME
    - name: OTP_API_KEY
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: OTP_API_KEY
    - name: RPAY_HOST
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: RPAY_HOST
    - name: RPAY_ID
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: RPAY_ID
    - name: RPAY_SECRET
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: RPAY_SECRET
    - name: RPAY_WEBHOOK_SECRET
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: RPAY_WEBHOOK_SECRET
    - name: TINY_PNG_SECRET
      valueFrom:
        secretKeyRef:
          name: app-secret
          key: TINY_PNG_SECRET

  analytics:  
    firebase:
      secret: firebase-sdk
      mountPath: /mnt/app/credentials
      appVariableName: GOOGLE_APPLICATION_CREDENTIALS

      
podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configmap:
